diff --git a/lib/ansible/module_utils/network/nxos/config/l3_interfaces/l3_interfaces.py b/lib/ansible/module_utils/network/nxos/config/l3_interfaces/l3_interfaces.py
index 2e31ee1046..f3df173c07 100644
--- a/lib/ansible/module_utils/network/nxos/config/l3_interfaces/l3_interfaces.py
+++ b/lib/ansible/module_utils/network/nxos/config/l3_interfaces/l3_interfaces.py
@@ -18,6 +18,7 @@ from ansible.module_utils.network.common.cfg.base import ConfigBase
 from ansible.module_utils.network.common.utils import to_list, remove_empties
 from ansible.module_utils.network.nxos.facts.facts import Facts
 from ansible.module_utils.network.nxos.utils.utils import normalize_interface, search_obj_in_list
+from ansible.module_utils.network.nxos.utils.utils import remove_rsvd_interfaces, get_interface_type
 
 
 class L3_interfaces(ConfigBase):
@@ -48,9 +49,13 @@ class L3_interfaces(ConfigBase):
         """
         facts, _warnings = Facts(self._module).get_facts(self.gather_subset, self.gather_network_resources)
         l3_interfaces_facts = facts['ansible_network_resources'].get('l3_interfaces')
+
         if not l3_interfaces_facts:
             return []
-        return l3_interfaces_facts
+        return remove_rsvd_interfaces(l3_interfaces_facts)
+
+    def edit_config(self, commands):
+        return self._connection.edit_config(commands)
 
     def execute_module(self):
         """ Execute the module
@@ -66,7 +71,7 @@ class L3_interfaces(ConfigBase):
         commands.extend(self.set_config(existing_l3_interfaces_facts))
         if commands:
             if not self._module.check_mode:
-                self._connection.edit_config(commands)
+                self.edit_config(commands)
             result['changed'] = True
         result['commands'] = commands
 
@@ -92,6 +97,8 @@ class L3_interfaces(ConfigBase):
         if config:
             for w in config:
                 w.update({'name': normalize_interface(w['name'])})
+                if get_interface_type(w['name']) == 'management':
+                    self._module.fail_json(msg="The 'management' interface is not allowed to be managed by this module")
                 want.append(remove_empties(w))
         have = existing_l3_interfaces_facts
         resp = self.set_state(want, have)
diff --git a/lib/ansible/module_utils/network/nxos/utils/utils.py b/lib/ansible/module_utils/network/nxos/utils/utils.py
index 90d2bf494a..9564758cb7 100644
--- a/lib/ansible/module_utils/network/nxos/utils/utils.py
+++ b/lib/ansible/module_utils/network/nxos/utils/utils.py
@@ -103,6 +103,12 @@ def get_interface_type(interface):
         return 'unknown'
 
 
+def remove_rsvd_interfaces(interfaces):
+    """Exclude reserved interfaces from user management
+    """
+    return [i for i in interfaces if get_interface_type(i['name']) != 'management']
+
+
 def vlan_range_to_list(vlans):
     result = []
     if vlans:
