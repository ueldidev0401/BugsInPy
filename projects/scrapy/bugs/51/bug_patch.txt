diff --git a/scrapy/item.py b/scrapy/item.py
index 9998010b..8ac27964 100644
--- a/scrapy/item.py
+++ b/scrapy/item.py
@@ -24,18 +24,21 @@ class Field(dict):
 class ItemMeta(ABCMeta):
 
     def __new__(mcs, class_name, bases, attrs):
+        new_bases = tuple(base._class for base in bases if hasattr(base, '_class'))
+        _class = super(ItemMeta, mcs).__new__(mcs, 'x_' + class_name, new_bases, attrs)
+
         fields = {}
         new_attrs = {}
-        for n, v in six.iteritems(attrs):
+        for n in dir(_class):
+            v = getattr(_class, n)
             if isinstance(v, Field):
                 fields[n] = v
-            else:
-                new_attrs[n] = v
+            elif n in attrs:
+                new_attrs[n] = attrs[n]
 
-        cls = super(ItemMeta, mcs).__new__(mcs, class_name, bases, new_attrs)
-        cls.fields = cls.fields.copy()
-        cls.fields.update(fields)
-        return cls
+        new_attrs['fields'] = fields
+        new_attrs['_class'] = _class
+        return super(ItemMeta, mcs).__new__(mcs, class_name, bases, new_attrs)
 
 
 class DictItem(MutableMapping, BaseItem):
