diff --git a/keras/engine/training.py b/keras/engine/training.py
index 8804da18..8c60af2e 100644
--- a/keras/engine/training.py
+++ b/keras/engine/training.py
@@ -60,6 +60,9 @@ def _standardize_input_data(data, names, shapes=None,
     if data is None:
         return [None for _ in range(len(names))]
     if isinstance(data, dict):
+        for key, value in data.items():
+            if value.__class__.__name__ == 'DataFrame':
+                data[key] = value.values
         arrays = []
         for name in names:
             if name not in data:
@@ -68,6 +71,9 @@ def _standardize_input_data(data, names, shapes=None,
                                  str(names))
             arrays.append(data[name])
     elif isinstance(data, list):
+        for key, value in enumerate(data):
+            if value.__class__.__name__ == 'DataFrame':
+                data[key] = value.values
         if len(data) != len(names):
             if data and hasattr(data[0], 'shape'):
                 raise ValueError('Error when checking model ' +
@@ -95,6 +101,9 @@ def _standardize_input_data(data, names, shapes=None,
                         'The list you passed was: ' +
                         str(data)[:200])
         arrays = data
+    elif data.__class__.__name__ == 'DataFrame':
+        # test if data is a DataFrame, without pandas installed
+        data = data.values
     else:
         if not hasattr(data, 'shape'):
             raise TypeError('Error when checking model ' +
diff --git a/setup.py b/setup.py
index c3b22bba..dc19e492 100644
--- a/setup.py
+++ b/setup.py
@@ -20,7 +20,8 @@ setup(name='Keras',
           'tests': ['pytest',
                     'pytest-pep8',
                     'pytest-xdist',
-                    'pytest-cov'],
+                    'pytest-cov',
+                    'pandas'],
       },
       classifiers=[
           'Development Status :: 5 - Production/Stable',
